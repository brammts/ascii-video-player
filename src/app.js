/**
 * Main Application - –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ASCII Video Player
 */
class ASCIIVideoPlayerApp {
    constructor() {
        this.videoProcessor = new VideoProcessor();
        this.asciiRenderer = new ASCIIRenderer();
        this.videoRecorder = new VideoRecorder();
        this.asciiFormatter = new ASCIIFormatter();
        this.currentVideo = null;
        this.isRecording = false;
        this.currentFrame = null;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
        this.isMobile = this.detectMobileDevice();
        
        this.initializeElements();
        this.bindEvents();
        this.videoProcessor.init();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        if (this.isMobile) {
            this.showMobileOptimizationWarning();
        }
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
     */
    detectMobileDevice() {
        const userAgent = navigator.userAgent || navigator.vendor || window.opera;
        const isMobile = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent);
        const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
        const isSmallScreen = window.innerWidth <= 768;
        
        return isMobile || (isTouchDevice && isSmallScreen);
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–± –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
     */
    showMobileOptimizationWarning() {
        this.showStatus('üì± –ú–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.', 'info');
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        this.setMobileOptimizedSettings();
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
     */
    setMobileOptimizedSettings() {
        if (this.isMobile) {
            // –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã ASCII –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
            this.widthInput.value = 60;
            this.heightInput.value = 20;
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ä–µ–¥–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
            this.qualitySelect.value = 'medium';
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            this.updateSettings();
            
            this.showStatus('‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞', 'success');
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç DOM —ç–ª–µ–º–µ–Ω—Ç—ã
     */
    initializeElements() {
        // –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        this.uploadArea = document.getElementById('uploadArea');
        this.videoInput = document.getElementById('videoInput');
        this.settingsPanel = document.getElementById('settingsPanel');
        this.asciiDisplaySection = document.getElementById('asciiDisplaySection');
        this.asciiContent = document.getElementById('asciiContent');
        this.controls = document.getElementById('controls');
        
        // –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        this.playBtn = document.getElementById('playBtn');
        this.pauseBtn = document.getElementById('pauseBtn');
        this.stopBtn = document.getElementById('stopBtn');
        this.recordBtn = document.getElementById('recordBtn');
        this.stopRecordBtn = document.getElementById('stopRecordBtn');
        this.copyFrameBtn = document.getElementById('copyFrameBtn');
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        this.qualitySelect = document.getElementById('qualitySelect');
        this.widthInput = document.getElementById('widthInput');
        this.heightInput = document.getElementById('heightInput');
        this.newVideoBtn = document.getElementById('newVideoBtn');
        
        // –ü—Ä–æ–≥—Ä–µ—Å—Å
        this.progressText = document.getElementById('progressText');
        this.progressFill = document.getElementById('progressFill');
        this.timeInfo = document.getElementById('timeInfo');
        
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º ASCII —Ä–µ–Ω–¥–µ—Ä–µ—Ä
        this.asciiRenderer.init(this.asciiContent, this.videoProcessor, this.videoRecorder);
    }

    /**
     * –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è
     */
    bindEvents() {
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
        this.videoInput.addEventListener('change', (e) => this.handleFileSelect(e));
        this.uploadArea.addEventListener('click', () => this.videoInput.click());
        this.uploadArea.addEventListener('dragover', (e) => this.handleDragOver(e));
        this.uploadArea.addEventListener('drop', (e) => this.handleDrop(e));
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª"
        const uploadBtn = document.querySelector('.upload-btn');
        if (uploadBtn) {
            uploadBtn.addEventListener('click', (e) => {
                e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
                this.videoInput.click();
            });
        }
        
        // –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        this.playBtn.addEventListener('click', () => this.togglePlay());
        this.pauseBtn.addEventListener('click', () => this.pause());
        this.stopBtn.addEventListener('click', () => this.stop());
        this.recordBtn.addEventListener('click', () => this.startRecording());
        this.stopRecordBtn.addEventListener('click', () => this.stopRecording());
        this.copyFrameBtn.addEventListener('click', () => this.saveFrameAsPNG());
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        this.qualitySelect.addEventListener('change', () => this.updateSettings());
        this.widthInput.addEventListener('change', () => this.updateSettings());
        this.heightInput.addEventListener('change', () => this.updateSettings());
        this.newVideoBtn.addEventListener('click', () => this.selectNewVideo());
        
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞
     */
    async handleFileSelect(event) {
        const file = event.target.files[0];
        if (file) {
            await this.loadVideo(file);
        }
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
     */
    handleDragOver(event) {
        event.preventDefault();
        this.uploadArea.classList.add('dragover');
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–±—Ä–æ—Å —Ñ–∞–π–ª–∞
     */
    async handleDrop(event) {
        event.preventDefault();
        this.uploadArea.classList.remove('dragover');
        
        const files = event.dataTransfer.files;
        if (files.length > 0) {
            await this.loadVideo(files[0]);
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–∏–¥–µ–æ
     */
    async loadVideo(file) {
        try {
            this.showStatus('–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ...', 'info');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
            if (!file.type.startsWith('video/')) {
                throw new Error('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª');
            }

            // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–µ–∑ –ø–æ–∫–∞–∑–∞ –æ–±–ª–∞—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏
            this.clearVideoState();

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ
            const videoInfo = await this.videoProcessor.loadVideo(file);
            this.currentVideo = file;
            
            // –°–∫—Ä—ã–≤–∞–µ–º –æ–±–ª–∞—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏
            this.uploadArea.style.display = 'none';
            
            // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª" –≤ HTML
            const uploadBtn = document.querySelector('.upload-btn');
            if (uploadBtn) {
                uploadBtn.style.display = 'none';
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫
            this.settingsPanel.style.display = 'block';
            this.asciiDisplaySection.style.display = 'block';
            this.controls.style.display = 'block';
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            this.updateSettings();
            
            this.showStatus(`–í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${file.name}`, 'success');
            
        } catch (error) {
            this.showStatus(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}`, 'error');
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ:', error);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
     */
    updateSettings() {
        if (!this.currentVideo) return;
        
        // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º FPS –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        const fps = this.isMobile ? 15 : 30;
        
        const settings = {
            quality: this.qualitySelect.value,
            width: parseInt(this.widthInput.value),
            height: parseInt(this.heightInput.value),
            asciiWidth: parseInt(this.widthInput.value),
            asciiHeight: parseInt(this.heightInput.value),
            fps: fps,
            enableAudio: true, // –ó–≤—É–∫ –≤—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω
            isMobile: this.isMobile // –ü–µ—Ä–µ–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
        };
        
        this.settings = settings;
    }

    /**
     * –û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∏–¥–µ–æ –±–µ–∑ –ø–æ–∫–∞–∑–∞ –æ–±–ª–∞—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏
     */
    clearVideoState() {
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        this.asciiRenderer.stop();
        
        // –û—á–∏—â–∞–µ–º ASCII –∫–æ–Ω—Ç–µ–Ω—Ç
        if (this.asciiContent) {
            this.asciiContent.textContent = '';
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.currentVideo = null;
        
        // –û—á–∏—â–∞–µ–º VideoProcessor
        this.videoProcessor.cleanup();
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        this.updateProgress(0, '–ó–∞–≥—Ä—É–∑–∫–∞...');
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        this.updateControls(false);
        
        // –û—á–∏—â–∞–µ–º input –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Ç–æ–≥–æ –∂–µ —Ñ–∞–π–ª–∞
        this.videoInput.value = '';
        
        // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –æ–±–ª–∞—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä—ã—Ç–∞
        if (this.uploadArea) {
            this.uploadArea.style.display = 'none';
        }
    }

    /**
     * –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∏–¥–µ–æ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±–ª–∞—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏
     */
    resetVideoState() {
        // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.clearVideoState();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–ª–∞—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏
        this.uploadArea.style.display = 'block';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª"
        const uploadBtn = document.querySelector('.upload-btn');
        if (uploadBtn) {
            uploadBtn.style.display = 'block';
        }
        
        // –°–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª–∏
        this.settingsPanel.style.display = 'none';
        this.asciiDisplaySection.style.display = 'none';
        this.controls.style.display = 'none';
    }

    /**
     * –í—ã–±–∏—Ä–∞–µ—Ç –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ
     */
    selectNewVideo() {
        // –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å –ø–æ–∫–∞–∑–æ–º –æ–±–ª–∞—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        this.resetVideoState();
        
        this.showStatus('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ', 'info');
    }


    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
     */
    togglePlay() {
        if (this.asciiRenderer.isPlaying) {
            this.pause();
        } else {
            this.play();
        }
    }

    /**
     * –ù–∞—á–∏–Ω–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
     */
    async play() {
        if (!this.currentVideo) {
            this.showStatus('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ', 'warning');
            return;
        }

        try {
            this.showStatus('–ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ...', 'info');
            
            const settings = this.settings || this.getDefaultSettings();
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
            this.asciiRenderer.startRealtimeProcessing(settings);
            this.updateControls(true);
            this.startProgressUpdate();
            
            this.showStatus('–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–∞—á–∞—Ç–æ', 'success');
            
        } catch (error) {
            this.showStatus(`–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: ${error.message}`, 'error');
            console.error('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
        }
    }

    /**
     * –°—Ç–∞–≤–∏—Ç –Ω–∞ –ø–∞—É–∑—É
     */
    pause() {
        this.asciiRenderer.pause();
        this.updateControls(false);
    }

    /**
     * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
     */
    stop() {
        this.asciiRenderer.stop();
        this.updateControls(false);
        this.updateProgress(0, '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø–∏—Å—å –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ –∞–∫—Ç–∏–≤–Ω–∞
        if (this.isRecording) {
            this.stopRecording();
        }
    }


    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
     */
    updateControls(isPlaying) {
        this.playBtn.disabled = isPlaying;
        this.pauseBtn.disabled = !isPlaying;
        this.stopBtn.disabled = !isPlaying;
        
        // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∑–∞–ø–∏—Å–∏ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
        this.recordBtn.disabled = !this.currentVideo || isPlaying;
        this.copyFrameBtn.disabled = !this.currentVideo;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if (isPlaying) {
            this.playBtn.style.display = 'none';
            this.pauseBtn.style.display = 'inline-flex';
        } else {
            this.playBtn.style.display = 'inline-flex';
            this.pauseBtn.style.display = 'none';
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
     */
    startProgressUpdate() {
        const updateInterval = setInterval(() => {
            if (!this.asciiRenderer.isPlaying) {
                clearInterval(updateInterval);
                return;
            }
            
            const info = this.asciiRenderer.getPlaybackInfo();
            this.updateProgress(info.progress * 100, this.formatTime(info.currentTime));
            this.timeInfo.textContent = `${this.formatTime(info.currentTime)} / ${this.formatTime(info.totalTime)}`;
        }, 100);
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å
     */
    updateProgress(percent, text) {
        this.progressFill.style.width = `${percent}%`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å–∏
        if (this.isRecording) {
            this.progressText.textContent = `üî¥ –ó–ê–ü–ò–°–¨: ${text}`;
        } else {
            this.progressText.textContent = text;
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è
     */
    formatTime(seconds) {
        const mins = Math.floor(seconds / 60);
        const secs = Math.floor(seconds % 60);
        return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    showStatus(message, type = 'info') {
        const statusContainer = document.getElementById('statusMessages');
        const statusElement = document.createElement('div');
        statusElement.className = `status-message ${type}`;
        statusElement.textContent = message;
        
        statusContainer.appendChild(statusElement);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (statusElement.parentNode) {
                statusElement.parentNode.removeChild(statusElement);
            }
        }, 5000);
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    getDefaultSettings() {
        const fps = this.isMobile ? 15 : 30;
        const width = this.isMobile ? 60 : 120;
        const height = this.isMobile ? 20 : 40;
        const quality = this.isMobile ? 'medium' : 'high';
        
        return {
            quality: quality,
            width: width,
            height: height,
            asciiWidth: width,
            asciiHeight: height,
            fps: fps,
            enableAudio: true, // –ó–≤—É–∫ –≤—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω
            isMobile: this.isMobile
        };
    }

    /**
     * –ù–∞—á–∏–Ω–∞–µ—Ç –∑–∞–ø–∏—Å—å –≤–∏–¥–µ–æ
     */
    async startRecording() {
        if (!this.currentVideo) {
            this.showStatus('–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ', 'warning');
            return;
        }

        if (this.isRecording) {
            return;
        }

        try {
            const settings = this.settings || this.getDefaultSettings();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∫–æ—Ä–¥–µ—Ä —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏ ASCII
            this.videoRecorder.init(settings.asciiWidth, settings.asciiHeight, settings.fps);
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—É–¥–∏–æ –ø–æ—Ç–æ–∫ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω –∑–≤—É–∫
            if (settings.enableAudio && this.videoProcessor.video) {
                await this.videoRecorder.initAudioStream(this.videoProcessor.video);
            }
            
            await this.videoRecorder.startRecording();
            
            this.isRecording = true;
            this.updateRecordingControls(true);
            this.showStatus('–ó–∞–ø–∏—Å—å –Ω–∞—á–∞—Ç–∞ - –Ω–∞–∂–º–∏—Ç–µ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å" –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è', 'success');
            
            // –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –±—ã–ª–æ –∑–∞–ø—É—â–µ–Ω–æ
            if (!this.asciiRenderer.isPlaying) {
                await this.play();
            }
            
        } catch (error) {
            this.showStatus(`–û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏: ${error.message}`, 'error');
            console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏:', error);
        }
    }

    /**
     * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–ø–∏—Å—å –≤–∏–¥–µ–æ
     */
    async stopRecording() {
        if (!this.isRecording) {
            return;
        }

        try {
            this.videoRecorder.stopRecording();
            this.isRecording = false;
            this.updateRecordingControls(false);
            
            this.showStatus('–ó–∞–ø–∏—Å—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ...', 'info');
            
            // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–∏–¥–µ–æ
            const videoBlob = await this.videoRecorder.exportMP4();
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞
            const extension = videoBlob.type.includes('mp4') ? 'mp4' : 'webm';
            const filename = `ascii_video_${Date.now()}.${extension}`;
            this.videoRecorder.downloadVideo(videoBlob, filename);
            
            this.showStatus('–í–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!', 'success');
            
        } catch (error) {
            this.showStatus(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ: ${error.message}`, 'error');
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å—å—é
     */
    updateRecordingControls(isRecording) {
        this.recordBtn.disabled = isRecording;
        this.stopRecordBtn.disabled = !isRecording;
        
        if (isRecording) {
            this.recordBtn.innerHTML = '<span class="btn-icon">üî¥</span><span class="btn-text">–ó–∞–ø–∏—Å—å...</span>';
        } else {
            this.recordBtn.innerHTML = '<span class="btn-icon">üî¥</span><span class="btn-text">–ó–∞–ø–∏—Å–∞—Ç—å MP4</span>';
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π ASCII –∫–∞–¥—Ä
     */
    getCurrentFrame() {
        if (!this.currentVideo) {
            this.showStatus('–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ', 'warning');
            return null;
        }

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–∞–¥—Ä
        this.currentFrame = this.asciiContent.textContent;
        
        if (!this.currentFrame || this.currentFrame.trim().length === 0) {
            this.showStatus('–ù–µ—Ç –∫–∞–¥—Ä–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è. –°–Ω–∞—á–∞–ª–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–∏—Ç–µ –≤–∏–¥–µ–æ', 'warning');
            return null;
        }

        return this.currentFrame;
    }


    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π ASCII –∫–∞–¥—Ä –∫–∞–∫ PNG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
     */
    async saveFrameAsPNG() {
        const frame = this.getCurrentFrame();
        if (!frame) {
            return;
        }

        try {
            this.showStatus('–°–æ–∑–¥–∞–Ω–∏–µ PNG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...', 'info');
            
            // –°–æ–∑–¥–∞–µ–º canvas –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ ASCII
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —à—Ä–∏—Ñ—Ç–∞ –∏ —Ä–∞–∑–º–µ—Ä–æ–≤
            const fontSize = 12;
            const lineHeight = 14;
            const charWidth = 8;
            
            // –†–∞–∑–±–∏–≤–∞–µ–º ASCII –Ω–∞ —Å—Ç—Ä–æ–∫–∏
            const lines = frame.split('\n');
            const maxLineLength = Math.max(...lines.map(line => line.length));
            
            // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã canvas
            const canvasWidth = maxLineLength * charWidth;
            const canvasHeight = lines.length * lineHeight;
            
            canvas.width = canvasWidth;
            canvas.height = canvasHeight;
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
            ctx.fillStyle = '#000000';
            ctx.fillRect(0, 0, canvasWidth, canvasHeight);
            ctx.fillStyle = '#ffffff';
            ctx.font = `${fontSize}px 'JetBrains Mono', monospace`;
            ctx.textBaseline = 'top';
            
            // –†–µ–Ω–¥–µ—Ä–∏–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É
            for (let y = 0; y < lines.length; y++) {
                const line = lines[y];
                const yPos = y * lineHeight;
                
                for (let x = 0; x < line.length; x++) {
                    const char = line[x];
                    const xPos = x * charWidth;
                    ctx.fillText(char, xPos, yPos);
                }
            }
            
            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º canvas –≤ PNG blob
            const blob = await new Promise(resolve => {
                canvas.toBlob(resolve, 'image/png', 1.0);
            });
            
            // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
            const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
            const filename = `ascii_frame_${timestamp}.png`;
            
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = filename;
            a.style.display = 'none';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
            
            this.showStatus(`–ö–∞–¥—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ ${filename}`, 'success');
            
        } catch (error) {
            this.showStatus(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞–¥—Ä–∞: ${error.message}`, 'error');
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞–¥—Ä–∞:', error);
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    window.app = new ASCIIVideoPlayerApp();
});